{"version":3,"file":"static/js/562.37a4a1de.chunk.js","mappings":"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","sources":["components/FollowUp/FollowUpList.tsx","libraries/Training/DynamicList.tsx"],"sourcesContent":["import CallIcon from '@mui/icons-material/Call';\nimport LinkIcon from '@mui/icons-material/Link';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Container, Grid, Button, Typography, Box, Card, IconButton, Tooltip  } from '@mui/material';\nimport DynamicList from 'src/libraries/Training/DynamicList';\n\nimport PageHeader from 'src/libraries/heading/PageHeader';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { DeleteFollowUpDetails, getFollowUpList, resetDeleteFollowUpMsg } from 'src/requests/FollowUp/RequestFollowUpList'; \nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst FollowUpList = () => {\n  const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const followUpList = useSelector((state: RootState) => state.FollowUp.FollowUpList);\n    const followUpDeleteMsg = useSelector((state: RootState) => state.FollowUp.DeleteFollowUpMsg);\n    useEffect(() => {\n        dispatch(getFollowUpList());\n    }, [dispatch]);\n\n    useEffect(() => {\n      if (followUpDeleteMsg !== '') {\n      toast.success(followUpDeleteMsg)\n      dispatch(resetDeleteFollowUpMsg())\n      dispatch(getFollowUpList());\n    }\n  },[followUpDeleteMsg]);\n\n\n    const [pageIndex, setPageIndex] = useState(0);\n    const pageSize = 10;\n\n    \n    const handleNextPage = () => {\n        setPageIndex(pageIndex + 1);\n    };\n\n   \n    const handlePrevPage = () => {\n        setPageIndex(pageIndex - 1);\n    };\n\n\n    const paginatedList = followUpList.slice(pageIndex * pageSize, (pageIndex + 1) * pageSize);\n\n    const HeaderList = [\"Name\", \"FollowUp Count\", \"Status\", \"Reminder\", \"Comment\", \"Society\", \"FollowUp Date-Time\", \"Follow Up\",\"Admission Link\",\"Remove\"];\n    const IconList = [\n        { Id: 1, Icon:<Tooltip title=\"Take FollowUp\"><IconButton> <CallIcon sx={{ color: \"green\" }} /></IconButton></Tooltip>, Action: 'FollowUp' },\n        { Id: 1, Icon: <Tooltip title=\"Admission Form\"><IconButton><LinkIcon /></IconButton></Tooltip>, Action: 'Admission_Link' },\n        { Id: 1, Icon: <Tooltip title=\"Remove FollowUp\"><IconButton><DeleteIcon  sx={{ color: '#ff1943' }}  /></IconButton></Tooltip>, Action: 'Remove' }\n    ];\n\n    const totalCount = followUpList.length;\n    const startIndex = pageIndex * pageSize + 1;\n    const endIndex = Math.min((pageIndex + 1) * pageSize, totalCount);\nconsole.log(followUpList);\nconst clickItem = (value) => {\n  if (value.Action === \"Admission_Link\") {\n    navigate(\"../AdmissionForm/\" + value.Id)\n  }else if (value.Action === \"FollowUp\") {\n  navigate(\"../FollowUpForm/\" + value.Id)\n}else  if (value.Action === \"Remove\") {\n  if (window.confirm(\"Are you sure you want to delete this FollowUp Detail?\")) {\ndispatch(DeleteFollowUpDetails({StudentId:value.Id}))\n  }\n}\n}\n    return (\n        <Container>\n            \n        <Grid container spacing={2}  sx={{ width: '100%', overflow: 'hidden' }} >\n        <Grid item xs={12}>\n          {/* <Typography variant=\"h3\" gutterBottom>Enquiry List</Typography> */}\n        </Grid>\n\n          <Grid item xs={12} sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1, position: 'relative' }}>\n\n            <div style={{ flexGrow: 1, overflow: 'auto' }}>\n              <DynamicList\n                HeaderList={HeaderList}\n                ItemList={followUpList }\n                IconList={IconList}\n                ClickItem={clickItem}\n              />\n            </div>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '16px' }}>\n              <Typography variant=\"body2\">FollowUp List {startIndex}-{endIndex} of {totalCount} FollowUps</Typography>\n              <Box sx={{ display: 'flex', gap: 1 }}>\n                <Button onClick={handlePrevPage} variant=\"outlined\" disabled={pageIndex === 0}  style={{color:'#878686', minWidth: '120px'}}>\n                  Previous Page\n                </Button>\n                <Button onClick={handleNextPage} variant=\"outlined\" disabled={(pageIndex + 1) * pageSize >= totalCount} style={{color:'#878686'}}>\n                  Next Page\n                </Button>\n              </Box>\n            </Box>\n  \n          </Grid>\n  \n        </Grid>\n\n      </Container>\n    );\n\n    \n}\nexport default FollowUpList;\n\n\n\n","import { Checkbox, Grow, Typography } from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nconst DynamicList = ({\r\n  HeaderList,\r\n  ItemList,\r\n  IconList = undefined,\r\n  ClickItem = undefined,\r\n  ClickCheck = undefined,\r\n  IsSelect = 0\r\n}) => {\r\n  const clickCheckbox = (value) => {\r\n    let arr = [];\r\n    arr = ItemList.map((Item) => {\r\n      return Item.Id === value\r\n        ? { ...Item, IsActive: !Item.IsActive }\r\n        : IsSelect == 1\r\n          ? { ...Item, IsActive: false }\r\n          : Item;\r\n    });\r\n    ClickCheck({ Id: value, Value: arr, Action: 'Select' });\r\n  };\r\n  const CheckAll = () => {\r\n    let arr = [];\r\n    arr = ItemList.map((Item) => {\r\n      return { ...Item, IsActive: !getIsCheckedAll() };\r\n    });\r\n    ClickCheck({ Id: 0, Value: arr, Action: 'Select' });\r\n  };\r\n  const getIsCheckedAll = () => {\r\n    let IsChecked = true;\r\n    ItemList.map((Item) => {\r\n      if (!Item.IsActive) {\r\n        IsChecked = false;\r\n      }\r\n    });\r\n    return IsChecked;\r\n  };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow sx={{ backgroundColor: '#90caf9' }}>\r\n            {HeaderList.map((item, i) => {\r\n              return (\r\n                <TableCell align=\"center\" key={i}  sx={{ color: 'grey'}} >\r\n                               <Typography variant=\"body1\" fontWeight=\"bold\">\r\n                    <b>{item}</b>\r\n                  </Typography>\r\n                  {IsSelect == 2 && i == 0 && (\r\n                    <>\r\n                      <br></br>\r\n                      <Checkbox\r\n                        checked={getIsCheckedAll()}\r\n                        onChange={CheckAll}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <Grow in={true} {...{ timeout: 1500 }}>\r\n          <TableBody>\r\n            {ItemList.map((item, index) => {\r\n              return (\r\n                <TableRow key={index}>\r\n\r\n                  {item.Text1 != undefined && (\r\n                    <TableCell align=\"left\">{item.Text1}</TableCell>\r\n                  )}\r\n                  {item.Text2 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text2}</TableCell>\r\n                  )}\r\n                  {item.Text3 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text3}</TableCell>\r\n                  )}\r\n                  {item.Text4 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text4}</TableCell>\r\n                  )}\r\n                  {item.Text5 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text5}</TableCell>\r\n                  )}\r\n                  {item.Text6 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text6}</TableCell>\r\n                  )}\r\n                  {item.Text7 != undefined && (\r\n                    <TableCell align=\"center\">{item.Text7}</TableCell>\r\n                  )}\r\n                  {IconList?.map((obj, i) => {\r\n                    return (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        key={i}\r\n                        onClick={() => {\r\n                          ClickItem({ Id: item.Id, Action: obj.Action });\r\n                        }}\r\n                      >\r\n                        {obj.Icon}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Grow>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DynamicList;\r\n"],"names":["FollowUpList","navigate","useNavigate","dispatch","useDispatch","followUpList","useSelector","state","FollowUp","followUpDeleteMsg","DeleteFollowUpMsg","useEffect","getFollowUpList","toast","success","resetDeleteFollowUpMsg","pageIndex","setPageIndex","useState","IconList","slice","Id","Icon","_jsx","Tooltip","title","children","_jsxs","IconButton","CallIcon","sx","color","Action","LinkIcon","DeleteIcon","totalCount","length","startIndex","endIndex","Math","min","console","log","Container","Grid","container","spacing","width","overflow","item","xs","display","flexDirection","flexGrow","position","style","DynamicList","HeaderList","ItemList","ClickItem","value","window","confirm","DeleteFollowUpDetails","StudentId","Box","justifyContent","alignItems","marginTop","Typography","variant","gap","Button","onClick","handlePrevPage","disabled","minWidth","handleNextPage","_ref","ClickCheck","IsSelect","CheckAll","arr","map","Item","IsActive","getIsCheckedAll","Value","IsChecked","TableContainer","component","Paper","Table","TableHead","TableRow","backgroundColor","i","TableCell","align","fontWeight","_Fragment","Checkbox","checked","onChange","Grow","in","timeout","TableBody","index","undefined","Text1","Text2","Text3","Text4","Text5","Text6","Text7","obj"],"sourceRoot":""}