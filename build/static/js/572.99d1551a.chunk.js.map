{"version":3,"file":"static/js/572.99d1551a.chunk.js","mappings":"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","sources":["components/ChangePassword/ChangePassword.tsx","library/ErrorMessage/ErrorMessageForm.tsx","library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","../node_modules/@mui/icons-material/Send.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PageHeader from 'src/library/heading/pageHeader'\r\nimport { Button, Card, Container, TextField ,Grid } from '@mui/material'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'src/store';\r\nimport { getChangePassword, resetChangePassword } from 'src/requests/ChangePassword/ChangePassword';\r\nimport { IChangePasswordBody } from 'src/Interface/ChangePassword';\r\nimport { toast } from 'react-toastify';\r\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\r\nimport { ButtonPrimary } from 'src/library/StyledComponents/CommonStyled';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction ChangePassword() {\r\n    const dispatch = useDispatch();\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [erroroldPassword, setErroroldPassword] = useState('')\r\n    const [errornewPassword, setErrornewPassword] = useState('')\r\n    const [errorconfirmPassword, setErrorconfirmPassword] = useState('')\r\n    const GetChangePassword: any = useSelector(\r\n        (state: RootState) => state.ChangePassword.ChangePassword\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        if (GetChangePassword !== '') {\r\n            toast.success(GetChangePassword, { toastId: 'success1' })\r\n            dispatch(resetChangePassword());\r\n        }\r\n    }, [GetChangePassword])\r\n\r\n    const ValidatePassword = (value) => {\r\n        let returnVal = ''\r\n        if (value === '') {\r\n            returnVal = 'Field is required';\r\n        } else if (value.length < 6) {\r\n            returnVal = 'Enter more than 6 characters'\r\n        }\r\n        return returnVal;\r\n    }\r\n\r\n    const Submit = () => {\r\n        let isError = false;\r\n        let sReturn = '';\r\n        if (newPassword === oldPassword && newPassword !== \"\") {\r\n            setErroroldPassword(\"Old and New password cannot be same\")\r\n            isError = true\r\n        } else\r\n        if (newPassword !== confirmPassword && newPassword !== \"\") {\r\n            setErrornewPassword(\"New and Confirm password are not same\")\r\n            isError = true\r\n        } else {\r\n            sReturn = ValidatePassword(oldPassword)\r\n            setErroroldPassword(sReturn)\r\n            if (sReturn !== '')\r\n                isError = true\r\n            sReturn = ValidatePassword(newPassword)\r\n            setErrornewPassword(sReturn)\r\n            if (sReturn !== '')\r\n                isError = true\r\n            sReturn = ValidatePassword(confirmPassword)\r\n            setErrorconfirmPassword(sReturn)\r\n            if (sReturn !== '')\r\n                isError = true\r\n        }\r\n        if (!isError) {\r\n            const getChangePasswordBody: IChangePasswordBody =\r\n            {\r\n                UserId: sessionStorage.getItem(\"UserId\"),\r\n                NewPassword: newPassword,\r\n                OldPassword: oldPassword\r\n            }\r\n            dispatch(getChangePassword(getChangePasswordBody));\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Container>\r\n             \r\n                <PageHeader heading={'Change Password'} />\r\n                <Grid container>\r\n                   <Grid item md={3}></Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                    <Card sx={{ padding: 2 }} >\r\n                    <TextField type='password' fullWidth label=\"Old Password\"\r\n                        value={oldPassword}\r\n                        onChange={(e) => setOldPassword(e.target.value)} variant=\"standard\" />\r\n                    <ErrorMessageForm error={erroroldPassword} />\r\n                    <TextField fullWidth label=\"New Password\" value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)} variant=\"standard\" />\r\n                    <ErrorMessageForm error={errornewPassword} />\r\n                    <TextField type='password' fullWidth label=\"Confirm Password\" value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} variant=\"standard\" />\r\n                    <ErrorMessageForm error={errorconfirmPassword} />\r\n                    <br></br>\r\n                   \r\n                    <ButtonPrimary onClick={Submit} variant='contained'>\r\n                        Submit&nbsp;<SendIcon fontSize=\"small\"/>\r\n                    </ButtonPrimary>\r\n                </Card>\r\n                    </Grid>\r\n                </Grid>\r\n           \r\n            </Container>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessageForm({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessageForm","import { Box, Button, Typography, styled} from '@mui/material';\r\n\r\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\r\n\r\nfont-weight: 500;\r\nfont-size: 20px;\r\ncolor: black;\r\nmargin: auto;\r\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\nfont-family: roboto;\r\n@media (min-width: 280px) and (max-width: 320px)  {\r\n  font-size: 18px;\r\n};\r\n@media (min-width: 600px)  {\r\n  font-size: 22px;\r\n};\r\n`);\r\n\r\nexport const IconCardSize = styled(Box)`\r\n \r\n  width:70px;\r\n  height:75px;\r\n  @media (max-width: 320px) {\r\n    width: 60px;\r\n    height: 65px;\r\n  }\r\n  @media (max-width: 280px) {\r\n    width: 50px;\r\n    height: 55px;\r\n  }\r\n\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\ntext-decoration: none;\r\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\n\r\nexport const ButtonPrimary = styled(Button)(\r\n  ({ theme, color }) => `\r\ncolor: white;\r\nfont-size: 12px;\r\nfont-family: 'Roboto';\r\ntext-decoration: none;\r\nheight:30px;\r\nborder-radius: 3px;\r\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n@media (min-width: 600px) {\r\n  \r\n };\r\n`);","import { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\r\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\r\nimport { useNavigate } from 'react-router';\r\n\r\ninterface PageHeaderProps {\r\n  heading: string;\r\n}\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(2)};\r\n        margin-bottom: ${theme.spacing(2)};\r\n`\r\n);\r\n\r\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n  if (sessionStorage.getItem(\"UserId\") === null ||\r\n    sessionStorage.getItem(\"UserId\") === undefined) {\r\n    navigate('/')\r\n  }\r\n  return (\r\n    <Container>\r\n      <RootWrapper display=\"flex\" alignItems=\"center\">\r\n      <HeadingStyle>{(heading)}</HeadingStyle>\r\n       </RootWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  heading: PropTypes.string,\r\n};\r\n\r\nexport default PageHeader;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"],"names":["dispatch","useDispatch","oldPassword","setOldPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","erroroldPassword","setErroroldPassword","errornewPassword","setErrornewPassword","errorconfirmPassword","setErrorconfirmPassword","GetChangePassword","useSelector","state","ChangePassword","useEffect","toast","success","toastId","resetChangePassword","ValidatePassword","value","returnVal","length","_jsx","children","_jsxs","Container","PageHeader","heading","Grid","container","item","md","xs","Card","sx","padding","TextField","type","fullWidth","label","onChange","e","target","variant","ErrorMessageForm","error","ButtonPrimary","onClick","Submit","isError","sReturn","getChangePasswordBody","UserId","sessionStorage","getItem","NewPassword","OldPassword","getChangePassword","SendIcon","fontSize","_ref","Typography","color","HeadingStyle","styled","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","Button","_ref2","RootWrapper","concat","spacing","useTheme","navigate","useNavigate","undefined","display","alignItems","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getGridUtilityClass","GRID_SIZES","map","direction","wrap","size","getOffset","val","parse","parseFloat","String","replace","GridRoot","lg","sm","xl","zeroMinWidth","_ref4","boxSizing","flexWrap","width","margin","minWidth","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","gridClasses","maxWidth","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","_ref3","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","_ref5","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","Object","assign","up","generateGrid","themeProps","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","columnsContext","GridContext","slots","element","as","Provider"],"sourceRoot":""}