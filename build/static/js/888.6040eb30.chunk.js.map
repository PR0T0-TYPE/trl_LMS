{"version":3,"file":"static/js/888.6040eb30.chunk.js","mappings":"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","sources":["components/AddStaff/AddStaff.tsx","library/ErrorMessage/ErrorMessageForm.tsx","library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"],"sourcesContent":["import React from 'react'\r\nimport PageHeader from 'src/library/heading/pageHeader'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { Container, TextField, Button,Card, Typography} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { number } from 'prop-types';\r\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\r\n\r\n\r\n\r\nfunction AddStaff() {\r\n    const [alignment, setAlignment] = React.useState('Teacher');\r\n    const [name,setName]=useState('');\r\n    const [nameerror, setNameerror] =useState('')\r\n    const [birthdate, setBirthdate] = useState('')\r\n    const [birthdateerror, setBirthdateerror] = useState('')\r\n    const [qualification, setQualification]=useState('');\r\n    const [qualificationerror, setQualificationerror] = useState('')\r\n    const [address, setAddress]=useState('');\r\n    const [addresserror, setAddresserror] = useState('')\r\n    const [phonenumber, setPhoneNumber]=useState('');\r\n    const [phonenumbererror, setPhoneNumbererror] = useState('')\r\n    const [email, setEmail]=useState('');\r\n    const [emailerror, setEmailerror] = useState('') \r\n    const [joiningdate, setJoiningDate]=useState('');\r\n    const [joiningdateerror, setJoiningDateerror] =useState('') \r\n    const [experience, setExperience]=useState(''); \r\n    const [experienceerror, setExperienceerror] = useState('')\r\n  const handleChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newAlignment: string,\r\n  ) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const regex =  /^[a-zA-Z]*$/; \r\n  const emailRegExp = /^\\S+@\\S+\\.\\S+$/;\r\n  var phoneno = /^\\d{10}$/;\r\n\r\nconst clickSaveStaff = ()=>{\r\nlet isError = false;\r\nif(name ===''){\r\n    setNameerror(\"This field is required\")\r\n    isError = true\r\n  } else if(!regex.test(name)){\r\n    setNameerror(\"Accept only alphabetic characters\")\r\n  }\r\n  else{\r\n    setNameerror('')\r\n   \r\n  }\r\n\r\n  if(birthdate ===''){\r\n    setBirthdateerror(\"This field is required\")\r\n    isError = true\r\n  }else{\r\n    setBirthdateerror('')\r\n   \r\n  }\r\n\r\n  if(qualification ===''){\r\n    setQualificationerror(\"This field is required\")\r\n    isError = true\r\n  }else{\r\n    setQualificationerror('')\r\n   \r\n  }\r\n\r\n  if(address ===''){\r\n    setAddresserror(\"This field is required\")\r\n    isError = true\r\n  }else{\r\n    setAddresserror('')\r\n   \r\n  }\r\n\r\n  if(phonenumber ===''){\r\n    setPhoneNumbererror(\"This field is required\")\r\n  isError = true\r\n} \r\nelse if(!phoneno.test(phonenumber)){\r\n  setPhoneNumbererror('Invalid phone number');                  \r\n}\r\n\r\nelse{\r\n  setPhoneNumbererror('')\r\n \r\n}\r\n\r\n  if(email ===''){\r\n    setEmailerror(\"This field is required\")\r\n  isError = true\r\n} \r\nelse if(!emailRegExp.test(email)){\r\n  setEmailerror('Invalid email address');                  \r\n}\r\n\r\nelse{\r\n  setEmailerror('')\r\n \r\n}\r\n\r\n  if(joiningdate ===''){\r\n    setJoiningDateerror(\"This field is required\")\r\n    isError = true\r\n  }else{\r\n    setJoiningDateerror('')\r\n   \r\n  }\r\n\r\n  if(experience ===''){\r\n    setExperienceerror(\"This field is required\")\r\n    isError = true\r\n  }else{\r\n    setExperienceerror('')\r\n   \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n        \r\n        <PageHeader heading={'Add Staff'}/>\r\n        <ToggleButtonGroup\r\n      color=\"primary\"\r\n      value={alignment}\r\n      exclusive\r\n      onChange={handleChange}\r\n      aria-label=\"Platform\"\r\n    >\r\n      <ToggleButton value=\"Teacher\">Teacher</ToggleButton>\r\n      <ToggleButton value=\"Admin\">Admin Staff</ToggleButton>\r\n      \r\n    </ToggleButtonGroup>\r\n    <Card >\r\n    <TextField value={name} onChange={(e)=>{setName(e.target.value)}} label={'Name'}/>\r\n    <ErrorMessageForm error={nameerror}/>\r\n    \r\n    <Typography sx={{mt:\"3px\" ,fontSize:\"10px\"}}>Birthdate</Typography>\r\n    <TextField type={'date'} sx={{mt:\"-5px\"}}/>\r\n    <ErrorMessageForm error={birthdateerror}/>\r\n    \r\n    <TextField value={qualification} onChange={(e)=>{setQualification(e.target.value)}} \r\n    label={'Qualification'}/>\r\n    <ErrorMessageForm error={qualificationerror}/>\r\n    \r\n    <TextField value={address} onChange={(e)=>{setAddress(e.target.value)}} \r\n    label={'Address'}/>\r\n    <ErrorMessageForm error={addresserror}/>\r\n    \r\n    <TextField value={phonenumber} onChange={(e)=>{setPhoneNumber(e.target.value)}} \r\n    label={'Phone Number'}/>\r\n    <ErrorMessageForm error={phonenumbererror}/>\r\n    \r\n    <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} \r\n    label={'Email'}/>\r\n    <ErrorMessageForm error={emailerror}/>\r\n    \r\n    <Typography sx={{mt:\"3px\" ,fontSize:\"10px\"}}>JoiningDate</Typography>\r\n    <TextField type={'date'} sx={{mt:\"-5px\"}}/>\r\n    <ErrorMessageForm error={joiningdateerror}/>\r\n    \r\n    <TextField value={experience} onChange={(e)=>{setExperience(e.target.value)}} \r\n    label={'Experience'}/>\r\n    <ErrorMessageForm error={experienceerror}/>\r\n    \r\n    <Button  variant='contained' onClick={clickSaveStaff}>\r\n                        Save\r\n                    </Button>\r\n</Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AddStaff","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessageForm({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessageForm","import { Box, Button, Typography, styled} from '@mui/material';\r\n\r\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\r\n\r\nfont-weight: 500;\r\nfont-size: 20px;\r\ncolor: black;\r\nmargin: auto;\r\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\nfont-family: roboto;\r\n@media (min-width: 280px) and (max-width: 320px)  {\r\n  font-size: 18px;\r\n};\r\n@media (min-width: 600px)  {\r\n  font-size: 22px;\r\n};\r\n`);\r\n\r\nexport const IconCardSize = styled(Box)`\r\n \r\n  width:70px;\r\n  height:75px;\r\n  @media (max-width: 320px) {\r\n    width: 60px;\r\n    height: 65px;\r\n  }\r\n  @media (max-width: 280px) {\r\n    width: 50px;\r\n    height: 55px;\r\n  }\r\n\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\ntext-decoration: none;\r\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\n\r\nexport const ButtonPrimary = styled(Button)(\r\n  ({ theme, color }) => `\r\ncolor: white;\r\nfont-size: 12px;\r\nfont-family: 'Roboto';\r\ntext-decoration: none;\r\nheight:30px;\r\nborder-radius: 3px;\r\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n@media (min-width: 600px) {\r\n  \r\n };\r\n`);","import { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\r\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\r\nimport { useNavigate } from 'react-router';\r\n\r\ninterface PageHeaderProps {\r\n  heading: string;\r\n}\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(2)};\r\n        margin-bottom: ${theme.spacing(2)};\r\n`\r\n);\r\n\r\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n  if (sessionStorage.getItem(\"UserId\") === null ||\r\n    sessionStorage.getItem(\"UserId\") === undefined) {\r\n    navigate('/')\r\n  }\r\n  return (\r\n    <Container>\r\n      <RootWrapper display=\"flex\" alignItems=\"center\">\r\n      <HeadingStyle>{(heading)}</HeadingStyle>\r\n       </RootWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  heading: PropTypes.string,\r\n};\r\n\r\nexport default PageHeader;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  return _extends({}, theme.typography.button, {\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: theme.palette.action.disabled,\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of a button when it is selected.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;"],"names":["alignment","setAlignment","React","name","setName","useState","nameerror","setNameerror","birthdate","setBirthdate","birthdateerror","setBirthdateerror","qualification","setQualification","qualificationerror","setQualificationerror","address","setAddress","addresserror","setAddresserror","phonenumber","setPhoneNumber","phonenumbererror","setPhoneNumbererror","email","setEmail","emailerror","setEmailerror","joiningdate","setJoiningDate","joiningdateerror","setJoiningDateerror","experience","setExperience","experienceerror","setExperienceerror","regex","emailRegExp","phoneno","_jsxs","Container","children","_jsx","PageHeader","heading","ToggleButtonGroup","color","value","exclusive","onChange","handleChange","event","newAlignment","ToggleButton","Card","TextField","e","target","label","ErrorMessageForm","error","Typography","sx","mt","fontSize","type","Button","variant","onClick","clickSaveStaff","isError","test","_ref","HeadingStyle","styled","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","_ref2","RootWrapper","concat","spacing","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","display","alignItems","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getToggleButtonUtilityClass","ToggleButtonRoot","ButtonBase","capitalize","size","selectedColor","palette","text","primary","main","typography","button","borderRadius","shape","padding","border","divider","action","active","fullWidth","width","toggleButtonClasses","disabled","disabledBackground","textDecoration","backgroundColor","alpha","hoverOpacity","selected","selectedOpacity","pxToRem","disableFocusRipple","slots","focusRipple","defaultPrevented","isValueSelected","candidate","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","orientation","vertical","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","buttonValue","index","newValue","slice","splice","handleExclusiveChange","role","map","child"],"sourceRoot":""}