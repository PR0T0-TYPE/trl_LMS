{"version":3,"file":"static/js/300.899faff0.chunk.js","mappings":"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","sources":["components/AddSchoolNotice/AddSchoolNoticeList.tsx","library/ErrorMessage/ErrorMessage.tsx","library/Card/TabulerCard.tsx","library/List/TabulerList.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'src/store';\r\nimport { toast } from 'react-toastify';\r\nimport { DeleteSchoolNoticeDetails, getSchoolNoticeList, resetDeleteSchoolNoticeMsg } from 'src/requests/SchoolNotice1/RequestSchoolNotice';\r\n\r\nimport {  getSendnotice, resetSendMessage,resetDeleteMessage,getDeleteSchoolNotice } from 'src/requests/AddSchoolNotice/RequestAddSchoolNotice'\r\nimport { IGetSchoolNoticeListBody, ISendNoticeBody,IDeleteSchoolNoticeBody } from 'src/Interface/AddSchoolNotice/IAddSchoolNotice';\r\nimport TabulerList from 'src/library/List/TabulerList';\r\nimport { IGetSchoolNoticeDetails } from 'src/Interface/SchoolNotice/ISchoolNotice';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nfunction AddSchoolNoticeList({SchoolNotice}) {\r\n  const dispatch = useDispatch();\r\nconst navigate = useNavigate();\r\n\r\n  const DeleteSchoolNotice: any = useSelector((state: RootState) => state.SchoolNotice.deleteSchoolNoticeDetailsMsg);\r\n  console.log(\" DeleteSchoolNotice\", DeleteSchoolNotice)\r\n  const GetSend: any = useSelector((state: RootState) => state.AddSchoolNotice.sendNotice);\r\n  const SchoolNoticeList = useSelector((state: RootState) => state.SchoolNotice.SchoolNoticeList)\r\n  console.log(\"SchoolNoticeList\", SchoolNoticeList)\r\n\r\n\r\n  const ClickDelete = (Id) => {\r\n    if(confirm('Are you sure you want to delete SchoolNotice?')){\r\n      toast.success (\"Deleted School Notice\" ,{ toastId: 'success1' })\r\n      const GetDeleteSchoolNoticeBody: IGetSchoolNoticeDetails = { ID: Id }\r\n      dispatch(DeleteSchoolNoticeDetails(GetDeleteSchoolNoticeBody));\r\n    }\r\n   }\r\n\r\n  useEffect(() => {\r\n    if ( DeleteSchoolNotice !== '') {\r\n      toast.success ( DeleteSchoolNotice,{ toastId: 'success1' })\r\n      dispatch(resetDeleteSchoolNoticeMsg());\r\n      dispatch(getSchoolNoticeList());\r\n    }\r\n  }, [ DeleteSchoolNotice])\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n   dispatch(getSchoolNoticeList())\r\n  }, [dispatch])\r\n\r\nconst clickEdit = (Id) =>{\r\n  window.scrollTo(0, 0);\r\n  SchoolNotice(Id)\r\n}\r\n  return (\r\n    <div>\r\n      <TabulerList ItemList={SchoolNoticeList} clickEdit={clickEdit}  Delete={ClickDelete} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSchoolNoticeList","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessage({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import { Card, Grid, Hidden, Tooltip, Typography } from '@mui/material'\r\nimport React,{useState} from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nfunction TabulerCard({item ,clickEdit ,Submit ,Delete ,Submit1=undefined}) {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n\r\n  const handleResize = () => {\r\n\r\n      if (window.innerWidth < 900) {\r\n          setIsMobile(true)\r\n      } else {\r\n          setIsMobile(false)\r\n      }\r\n  }\r\n  window.addEventListener('resize', handleResize)\r\n  return (\r\n    <div>\r\n          <Card sx={{ mb: 1 }}  >\r\n            <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Hidden mdDown>\r\n              <Tooltip title={item.Text1} placement=\"left-start\">\r\n           <Typography px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}>{item.Text1}</Typography>\r\n           {/* <Typography dangerouslySetInnerHTML={{ __html: item.Text2 }} px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}></Typography> */}\r\n            </Tooltip>\r\n          \r\n              </Hidden>\r\n          \r\n              <Grid item xs={3} md={2}>\r\n                <Typography>{item.Text2}</Typography>\r\n              </Grid>\r\n              <Grid item xs={4.5} md={2}>\r\n                <Typography>{item.Text3}</Typography>\r\n              </Grid>\r\n          \r\n              <Grid item xs={1.5} md={1.5}>\r\n            \r\n              </Grid>\r\n              <Grid item xs={1.5} md={1.5}>\r\n                <EditIcon color={'success'} onClick={() => clickEdit(item.Id)} />\r\n              </Grid>\r\n              <Grid item xs={1.5} md={1.5}>\r\n                <DeleteIcon  color={'error'} onClick={() => Delete(item.Id)} />\r\n              </Grid>\r\n              {/* {Submit1 &&  <Grid item xs={2} md={1}>\r\n                <ArrowForwardIcon color={'secondary'} onClick={() =>Submit1(item.Id)} />\r\n              </Grid> } */}\r\n             \r\n            </Grid>\r\n          </Card>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TabulerCard","import React from 'react'\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\r\nimport TabulerCard from '../Card/TabulerCard'\r\n\r\nfunction TabulerList({ ItemList, clickEdit, Submit=undefined, Delete ,Submit1=undefined}) {\r\n    return (\r\n        <div>\r\n            {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\r\n                <>\r\n                    {ItemList.map((Item, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                <TabulerCard item={Item} clickEdit={clickEdit} Submit={Submit} Delete={Delete} Submit1={Submit1}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TabulerList"],"names":["_ref","SchoolNotice","dispatch","useDispatch","DeleteSchoolNotice","useNavigate","useSelector","state","deleteSchoolNoticeDetailsMsg","console","log","AddSchoolNotice","sendNotice","SchoolNoticeList","useEffect","toast","success","toastId","resetDeleteSchoolNoticeMsg","getSchoolNoticeList","_jsx","children","TabulerList","ItemList","clickEdit","Id","window","scrollTo","Delete","confirm","GetDeleteSchoolNoticeBody","ID","DeleteSchoolNoticeDetails","error","Typography","sx","textAlign","color","item","Submit","Submit1","isMobile","setIsMobile","useState","addEventListener","handleResize","innerWidth","Card","mb","_jsxs","Grid","container","style","display","alignItems","Hidden","mdDown","Tooltip","title","Text1","placement","px","overflow","whiteSpace","textOverflow","width","xs","md","Text2","Text3","EditIcon","onClick","DeleteIcon","length","ErrorMessage","_Fragment","map","Item","i","TabulerCard"],"sourceRoot":""}