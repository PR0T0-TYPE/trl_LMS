{"version":3,"file":"static/js/8.ff1c391b.chunk.js","mappings":"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","sources":["assets/style/CommonStyle.tsx","components/AddSchoolNotice/AddSchoolNotice.tsx","components/AddSchoolNotice/AddSchoolNoticeList.tsx","libraries/Training/Dropdown.tsx","libraries/styled/ErrormessageStyled.tsx","library/ErrorMessage/ErrorMessage.tsx","library/ErrorMessage/ErrorMessageForm.tsx","library/Card/TabulerCard.tsx","library/List/TabulerList.tsx","library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","library/icon/icon1.tsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\r\n\r\nexport const Styles = makeStyles({\r\n    iIconExamSchedule: {\r\n\r\n        fontSize: \"20px !important\",\r\n        marginTop: '10px',\r\n        backgroundColor: \"#e8a0e7\",\r\n        borderRadius: \"50px\",\r\n        marginRight: \"-15px\",\r\n        '@media (max-width: 280px)': {\r\n          fontSize: \"15px !important\",\r\n          marginTop: '10px',\r\n        },\r\n      },\r\n    \r\n    iIconSupport: {\r\n\r\n        fontSize: \"20px !important\",\r\n    \r\n    \r\n    \r\n        '@media (max-width: 280px)': {\r\n          fontSize: \"15px !important\",\r\n          // marginTop: '20px',  \r\n        },\r\n      },\r\n    })","import React, { useState, useEffect, useRef } from 'react'\r\nimport PageHeader from 'src/library/heading/pageHeader'\r\nimport { Card, Container, TextField, Box, Button, Typography, Grid } from '@mui/material'\r\nimport CalendarField from \"src/libraries/Training/CalendarField\";\r\n\r\nimport Dropdown from \"src/libraries/Training/Dropdown\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'src/store';\r\nimport { IAddSchoolNotice } from 'src/Interface/SchoolNotice/ISchoolNotice';\r\nimport { IGetClassNameListBody } from 'src/Interface/ClassNameList/ICLassNameList';\r\nimport { StudentDetailsgetClassName } from 'src/requests/ClassNameList/RequestClassNameList'\r\nimport { toast } from 'react-toastify';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { ChangeFileIntoBase64, CheckFileValidation, IsDateValid, IsFutureDateValid, IsTodayFutureDateValid, getDateFormatted, getInputDateFormatted, getTodayformatDate, toolbarOptions } from '../Common/util';\r\nimport SuspenseLoader from 'src/layouts/Components/SuspenseLoader';\r\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\r\nimport AddSchoolNoticeList from './AddSchoolNoticeList';\r\nimport { Styles } from 'src/assets/style/CommonStyle';\r\nimport Icon1 from 'src/library/icon/icon1';\r\nimport { ButtonPrimary } from 'src/library/StyledComponents/CommonStyled';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { getClass } from 'src/requests/Enquiry/RequestEnquiryList';\r\nimport { AddSchoolNoticeDetails, getSchoolNoticeDetails, resetSchoolNoticeDetails } from 'src/requests/SchoolNotice1/RequestSchoolNotice';\r\nimport { number } from 'prop-types';\r\nimport { getCalendarFormat } from '../Common/utils1';\r\n\r\nfunction AddSchoolNotice() {\r\n  const Class = useSelector((state: RootState) => state.Enquiry.Class);\r\n  const AddSchoolNoticeMsg = useSelector((state: RootState) => state.SchoolNotice.AddSchoolNoticeMsg)\r\n  const SchoolNoticeDetails = useSelector((state: RootState) => state.SchoolNotice.SchoolNoticeDetails)\r\n\r\n  const [Id, setID] = useState('')\r\n  const [ClassID, setClassID] = useState('0');\r\n  const [Title, setTitle] = useState('');\r\n  const aRef = useRef(null);\r\n  const validFiles = ['jpg', 'jpeg', 'png', 'bmp'];\r\n  const [error, setError] = useState('');\r\n  const [fileData, setFileData] = useState();\r\n  const [fileName, setFileName] = useState('');\r\n  const [NoticeDescription, setNoticeDescription] = useState('');\r\n  const [selectdate, setSelectDate] = useState('');\r\n  const [ClassErrorMessage, setClassErrorMessage] = useState('')\r\n  const [TitleErrorMessage, setTitleErrorMessage] = useState('')\r\n  const [descriptionerror, setDescriptionError] = useState('');\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getClass())\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (AddSchoolNoticeMsg !== '') {\r\n      toast.success(AddSchoolNoticeMsg);\r\n      dispatch(resetSchoolNoticeDetails())\r\n    }\r\n  }, [AddSchoolNoticeMsg])\r\n\r\n  useEffect(() => {\r\n    if (Id !== '') {\r\n      dispatch(getSchoolNoticeDetails({ ID: Number(Id) }))\r\n    }\r\n  }, [Id])\r\n\r\n  useEffect(() => {\r\n    if (SchoolNoticeDetails !== null) {\r\n      setClassID(SchoolNoticeDetails.ClassId)\r\n      setTitle(SchoolNoticeDetails.NoticeTitle)\r\n      setNoticeDescription(SchoolNoticeDetails.NoticeDescription)\r\n      setSelectDate(getCalendarFormat(SchoolNoticeDetails.NoticeDate))\r\n      setFileName(SchoolNoticeDetails.NoticeFileName)\r\n    }\r\n    console.log(SchoolNoticeDetails)\r\n  }, [SchoolNoticeDetails])\r\n\r\n  const clickClass = (value) => {\r\n    setClassID(value);\r\n    setClassErrorMessage(\"\");\r\n  }\r\n  const changeFile = async (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      let isValid = CheckFileValidation(e.target.files[0], ['jpg', 'jpeg', 'png', 'bmp', 'pdf'], 2000000)\r\n      setError(isValid)\r\n      if (isValid === null) {\r\n        let base64URL: any = await ChangeFileIntoBase64(e.target.files[0]);\r\n        setFileData(base64URL.slice(base64URL.indexOf(',') + 1));\r\n        setFileName(e.target.files[0].name);\r\n      }\r\n      else {\r\n        aRef.current.value = null;\r\n      }\r\n    }\r\n  }\r\n  if (Id !== '') {\r\n    console.log(Id)\r\n  }\r\n  const IsFormValid = () => {\r\n    let isValid = true;\r\n    if (ClassID === \"0\") {\r\n      setClassErrorMessage(\"Please select student's class\")\r\n      isValid = false\r\n    } else {\r\n      setClassErrorMessage(\"\")\r\n    };\r\n\r\n    return isValid\r\n  }\r\n\r\n  const clickSubmit = () => {\r\n    const isFormValid = IsFormValid();\r\n    if (isFormValid) {\r\n      const AddSchoolNotice: IAddSchoolNotice = {\r\n        ID: Id == '' ? 0 : Number(Id),\r\n        ClassIds: ClassID,\r\n        NoticeTitle: Title,\r\n        NoticeDescription: NoticeDescription,\r\n        NoticeFileName: fileName,\r\n        BinaryData: fileData,\r\n        NoticeDate: selectdate\r\n\r\n      }\r\n      dispatch(AddSchoolNoticeDetails(AddSchoolNotice))\r\n\r\n      console.log(IsFormValid())\r\n    }\r\n    else {\r\n      // If the form is not valid, show an error message\r\n      toast.error('Please fill all required fields correctly.');\r\n    }\r\n\r\n  }\r\n  const clickEdit = (Id) => {\r\n    setID(Id)\r\n  }\r\n  return (\r\n    <>\r\n      <PageHeader heading={'Add School Notice'} />\r\n      <Container>\r\n        <Card>\r\n          {/* <DropDown itemList={GetHomeWork} ClickItem={ClickItem} DefaultValue={selectclass} Label={'Select Class'} />  */}\r\n          <Typography variant='h3' color={'success'} >\r\n          </Typography>\r\n\r\n          <br></br>\r\n          <Dropdown\r\n            ItemList={Class}\r\n            Label=\"\"\r\n            DefaultValue={ClassID}\r\n            ClickItem={clickClass}\r\n            Placeholder=\"Select Class\"\r\n            ErrorMessage={ClassErrorMessage}\r\n          />\r\n          <ErrorMessageForm error={ClassErrorMessage} />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField label={\"Title:\"} value={Title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                variant=\"standard\" error={TitleErrorMessage !== ''}\r\n                helperText={TitleErrorMessage} > </TextField>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField type='date' label={\"Date\"} value={selectdate} focused onChange={(e) => { setSelectDate(e.target.value) }}\r\n              /><br></br>\r\n            </Grid>\r\n          </Grid>\r\n          <ReactQuill value={NoticeDescription} modules={toolbarOptions}\r\n            onChange={(value) => setNoticeDescription(value)} />\r\n          <ErrorMessageForm error={descriptionerror} />\r\n          <Box mt={2}>\r\n            <input type=\"file\" ref={aRef} accept=\".png,.jpg,.jpeg,.bmp\" onChange={changeFile} ></input>\r\n          </Box>\r\n          {fileName}\r\n          {/* <Box className={classes.iIconSupport}> */}\r\n          <Box>\r\n            <Icon1 Note={\"Supports only \" + validFiles.join(', ') + \" files types up to 5 MB\"} />\r\n          </Box>\r\n          {Error && <ErrorMessageForm error={Error} />}\r\n          <Grid container>\r\n            <Grid item xs={12} md={3} sx={{ float: \"right\" }}>\r\n              <ButtonPrimary onClick={clickSubmit} >Send&nbsp;<SendIcon fontSize=\"small\" /></ButtonPrimary>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Card>\r\n        <br></br>\r\n        {\r\n          <AddSchoolNoticeList SchoolNotice={clickEdit} />\r\n          // <AddSchoolNoticeList clickEdit={clickEdit} />\r\n        }\r\n\r\n      </Container >\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddSchoolNotice\r\n\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'src/store';\r\nimport { toast } from 'react-toastify';\r\nimport { DeleteSchoolNoticeDetails, getSchoolNoticeList, resetDeleteSchoolNoticeMsg } from 'src/requests/SchoolNotice1/RequestSchoolNotice';\r\n\r\nimport {  getSendnotice, resetSendMessage,resetDeleteMessage,getDeleteSchoolNotice } from 'src/requests/AddSchoolNotice/RequestAddSchoolNotice'\r\nimport { IGetSchoolNoticeListBody, ISendNoticeBody,IDeleteSchoolNoticeBody } from 'src/Interface/AddSchoolNotice/IAddSchoolNotice';\r\nimport TabulerList from 'src/library/List/TabulerList';\r\nimport { IGetSchoolNoticeDetails } from 'src/Interface/SchoolNotice/ISchoolNotice';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nfunction AddSchoolNoticeList({SchoolNotice}) {\r\n  const dispatch = useDispatch();\r\nconst navigate = useNavigate();\r\n\r\n  const DeleteSchoolNotice: any = useSelector((state: RootState) => state.SchoolNotice.deleteSchoolNoticeDetailsMsg);\r\n  console.log(\" DeleteSchoolNotice\", DeleteSchoolNotice)\r\n  const GetSend: any = useSelector((state: RootState) => state.AddSchoolNotice.sendNotice);\r\n  const SchoolNoticeList = useSelector((state: RootState) => state.SchoolNotice.SchoolNoticeList)\r\n  console.log(\"SchoolNoticeList\", SchoolNoticeList)\r\n\r\n\r\n  const ClickDelete = (Id) => {\r\n    if(confirm('Are you sure you want to delete SchoolNotice?')){\r\n      toast.success (\"Deleted School Notice\" ,{ toastId: 'success1' })\r\n      const GetDeleteSchoolNoticeBody: IGetSchoolNoticeDetails = { ID: Id }\r\n      dispatch(DeleteSchoolNoticeDetails(GetDeleteSchoolNoticeBody));\r\n    }\r\n   }\r\n\r\n  useEffect(() => {\r\n    if ( DeleteSchoolNotice !== '') {\r\n      toast.success ( DeleteSchoolNotice,{ toastId: 'success1' })\r\n      dispatch(resetDeleteSchoolNoticeMsg());\r\n      dispatch(getSchoolNoticeList());\r\n    }\r\n  }, [ DeleteSchoolNotice])\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n   dispatch(getSchoolNoticeList())\r\n  }, [dispatch])\r\n\r\nconst clickEdit = (Id) =>{\r\n  window.scrollTo(0, 0);\r\n  SchoolNotice(Id)\r\n}\r\n  return (\r\n    <div>\r\n      <TabulerList ItemList={SchoolNoticeList} clickEdit={clickEdit}  Delete={ClickDelete} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSchoolNoticeList","import { NativeSelect, Typography } from \"@mui/material\";\r\nimport { ErrorDetail } from '../styled/ErrormessageStyled';\r\n\r\n\r\nconst Dropdown = ({ ItemList, ClickItem, Label, DefaultValue, ErrorMessage = '', Placeholder = 'select option' }) => {\r\n    return (<>\r\n{/* \r\n        <Typography>{Label}</Typography> */}\r\n        <NativeSelect value={DefaultValue} \r\n        fullWidth variant=\"outlined\"\r\n         size=\"small\" required\r\n            onChange={(e) => ClickItem(e.target.value)}>\r\n            <option value=\"0\">{Placeholder}</option>\r\n            {ItemList?.map((Item, i) => {\r\n                return (\r\n                    <option value={Item.Value} key={i}>\r\n                        {Item.Name}\r\n                    </option>\r\n                );\r\n            })}\r\n        </NativeSelect>\r\n        <ErrorDetail>{ErrorMessage}</ErrorDetail>\r\n    </>)\r\n}\r\n\r\nexport default Dropdown","import { Typography, styled } from '@mui/material';\r\n\r\nexport const ErrorDetail = styled(Typography)`\r\n  font-size: 12px;\r\n  color: red;\r\n  text-align: center;\r\n  font-family: 'Roboto';\r\n  @media (max-width: 280px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\nexport const ShowMessage = styled(Typography)`\r\n  font-size: 12px;\r\n  // color: red;\r\n  text-align: center;\r\n  font-family: 'Roboto';\r\n  @media (max-width: 280px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\nexport const ErrorDetail1 = styled(Typography)`\r\n  font-size: 12px;\r\n  color: red;\r\n  margin-top: -10px;\r\n  font-family: 'Roboto';\r\n  @media (max-width: 280px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const ErrorDetail2 = styled(Typography)`\r\n  font-size: 12px;\r\n  color: red;\r\n\r\n  font-family: 'Roboto';\r\n  @media (max-width: 280px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessage({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction ErrorMessageForm({error}) {\r\n  return (\r\n    <div>\r\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessageForm","import { Card, Grid, Hidden, Tooltip, Typography } from '@mui/material'\r\nimport React,{useState} from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nfunction TabulerCard({item ,clickEdit ,Submit ,Delete ,Submit1=undefined}) {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n\r\n  const handleResize = () => {\r\n\r\n      if (window.innerWidth < 900) {\r\n          setIsMobile(true)\r\n      } else {\r\n          setIsMobile(false)\r\n      }\r\n  }\r\n  window.addEventListener('resize', handleResize)\r\n  return (\r\n    <div>\r\n          <Card sx={{ mb: 1 }}  >\r\n            <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Hidden mdDown>\r\n              <Tooltip title={item.Text1} placement=\"left-start\">\r\n           <Typography px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}>{item.Text1}</Typography>\r\n           {/* <Typography dangerouslySetInnerHTML={{ __html: item.Text2 }} px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}></Typography> */}\r\n            </Tooltip>\r\n          \r\n              </Hidden>\r\n          \r\n              <Grid item xs={3} md={2}>\r\n                <Typography>{item.Text2}</Typography>\r\n              </Grid>\r\n              <Grid item xs={4.5} md={2}>\r\n                <Typography>{item.Text3}</Typography>\r\n              </Grid>\r\n          \r\n              <Grid item xs={1.5} md={1.5}>\r\n            \r\n              </Grid>\r\n              <Grid item xs={1.5} md={1.5}>\r\n                <EditIcon color={'success'} onClick={() => clickEdit(item.Id)} />\r\n              </Grid>\r\n              <Grid item xs={1.5} md={1.5}>\r\n                <DeleteIcon  color={'error'} onClick={() => Delete(item.Id)} />\r\n              </Grid>\r\n              {/* {Submit1 &&  <Grid item xs={2} md={1}>\r\n                <ArrowForwardIcon color={'secondary'} onClick={() =>Submit1(item.Id)} />\r\n              </Grid> } */}\r\n             \r\n            </Grid>\r\n          </Card>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TabulerCard","import React from 'react'\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\r\nimport TabulerCard from '../Card/TabulerCard'\r\n\r\nfunction TabulerList({ ItemList, clickEdit, Submit=undefined, Delete ,Submit1=undefined}) {\r\n    return (\r\n        <div>\r\n            {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\r\n                <>\r\n                    {ItemList.map((Item, i) => {\r\n                        return (\r\n                            <div key={i}>\r\n                                <TabulerCard item={Item} clickEdit={clickEdit} Submit={Submit} Delete={Delete} Submit1={Submit1}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TabulerList","import { Box, Button, Typography, styled} from '@mui/material';\r\n\r\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\r\n\r\nfont-weight: 500;\r\nfont-size: 20px;\r\ncolor: black;\r\nmargin: auto;\r\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\nfont-family: roboto;\r\n@media (min-width: 280px) and (max-width: 320px)  {\r\n  font-size: 18px;\r\n};\r\n@media (min-width: 600px)  {\r\n  font-size: 22px;\r\n};\r\n`);\r\n\r\nexport const IconCardSize = styled(Box)`\r\n \r\n  width:70px;\r\n  height:75px;\r\n  @media (max-width: 320px) {\r\n    width: 60px;\r\n    height: 65px;\r\n  }\r\n  @media (max-width: 280px) {\r\n    width: 50px;\r\n    height: 55px;\r\n  }\r\n\r\n  border-radius: 10px;\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\ntext-decoration: none;\r\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\n\r\nexport const ButtonPrimary = styled(Button)(\r\n  ({ theme, color }) => `\r\ncolor: white;\r\nfont-size: 12px;\r\nfont-family: 'Roboto';\r\ntext-decoration: none;\r\nheight:30px;\r\nborder-radius: 3px;\r\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\r\n@media (min-width: 600px) {\r\n  \r\n };\r\n`);","import { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\r\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\r\nimport { useNavigate } from 'react-router';\r\n\r\ninterface PageHeaderProps {\r\n  heading: string;\r\n}\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(2)};\r\n        margin-bottom: ${theme.spacing(2)};\r\n`\r\n);\r\n\r\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\r\n  const theme = useTheme();\r\n\r\n  const navigate = useNavigate();\r\n  if (sessionStorage.getItem(\"UserId\") === null ||\r\n    sessionStorage.getItem(\"UserId\") === undefined) {\r\n    navigate('/')\r\n  }\r\n  return (\r\n    <Container>\r\n      <RootWrapper display=\"flex\" alignItems=\"center\">\r\n      <HeadingStyle>{(heading)}</HeadingStyle>\r\n       </RootWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  heading: PropTypes.string,\r\n};\r\n\r\nexport default PageHeader;","import React, { useState } from 'react';\r\nimport { ClickAwayListener, IconButton, Typography, Container } from \"@mui/material\";\r\nimport Tooltip, { TooltipProps } from \"@mui/material/Tooltip\";\r\nimport { Styles } from 'src/assets/style/CommonStyle';\r\nimport InfoTwoToneIcon from '@mui/icons-material/InfoTwoTone';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { styled, useTheme, Grid, MenuItem, Divider } from '@mui/material';\r\n\r\n\r\nIcon1.propTypes = {\r\n    Note: PropTypes.string,\r\n}\r\n\r\nfunction Icon1({ Note }) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen((prev) => !prev);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setOpen(false);\r\n    };\r\n    const theme = useTheme();\r\n\r\n    const DotLegend = styled('span')(\r\n        ({ theme }) => `\r\n          border-radius: 22px;\r\n          width: ${theme.spacing(1.5)};\r\n          height: ${theme.spacing(1.5)};\r\n          display: inline-block;\r\n          margin-right: ${theme.spacing(1)};\r\n          margin-top: -${theme.spacing(0.1)};\r\n      `\r\n    );\r\n\r\n    const classes = Styles();\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 2, marginTop: '-27px' }}>\r\n                    <Typography variant=\"body2\" fontSize='15px'>\r\n                        {/* <DotLegend className={classes.Listfont1}\r\n                            style={{ background: 'darkmagenta', marginLeft: '9px', marginBottom: \"-2px\" }}\r\n                        /><small><b>Description</b></small> */}\r\n                        <br />\r\n                    </Typography> <br />\r\n                \r\n                    <ClickAwayListener onClickAway={handleClickAway}>\r\n\r\n                        <Tooltip\r\n                            PopperProps={{\r\n                                disablePortal: true,\r\n                            }}\r\n                            onClose={handleClick}\r\n                            open={open}\r\n                            disableFocusListener\r\n                            disableHoverListener\r\n                            disableTouchListener\r\n                            title={Note}\r\n                            arrow\r\n                            placement=\"left\"\r\n                            // alignItem=\"right\"\r\n\r\n                            componentsProps={{\r\n                                tooltip: {\r\n                                    sx: {\r\n                                        marginLeft: '70px',\r\n                                        transform: \"translate3d(20px, 14.5px, 0px) !important\",\r\n                                        marginTop: '-10px',\r\n\r\n                                    }\r\n                                }\r\n                            }}\r\n\r\n                        >\r\n\r\n                            <InfoTwoToneIcon type=\"button\" onClick={handleClick} className={classes.iIconExamSchedule} />\r\n                        </Tooltip>\r\n\r\n\r\n                    </ClickAwayListener>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Icon1;\r\n"],"names":["Styles","makeStyles","iIconExamSchedule","fontSize","marginTop","backgroundColor","borderRadius","marginRight","iIconSupport","Class","useSelector","state","Enquiry","AddSchoolNoticeMsg","SchoolNotice","SchoolNoticeDetails","Id","setID","useState","ClassID","setClassID","Title","setTitle","aRef","useRef","error","setError","fileData","setFileData","fileName","setFileName","NoticeDescription","setNoticeDescription","selectdate","setSelectDate","ClassErrorMessage","setClassErrorMessage","TitleErrorMessage","setTitleErrorMessage","descriptionerror","setDescriptionError","dispatch","useDispatch","useEffect","getClass","toast","success","resetSchoolNoticeDetails","getSchoolNoticeDetails","ID","Number","ClassId","NoticeTitle","getCalendarFormat","NoticeDate","NoticeFileName","console","log","IsFormValid","isValid","_jsxs","_Fragment","children","_jsx","PageHeader","heading","Container","Card","Typography","variant","color","Dropdown","ItemList","Label","DefaultValue","ClickItem","value","Placeholder","ErrorMessage","ErrorMessageForm","Grid","container","spacing","item","xs","TextField","label","onChange","e","target","helperText","type","focused","ReactQuill","modules","toolbarOptions","Box","mt","ref","accept","async","files","length","CheckFileValidation","base64URL","ChangeFileIntoBase64","slice","indexOf","name","current","Icon1","Note","join","Error","md","sx","float","ButtonPrimary","onClick","clickSubmit","AddSchoolNotice","ClassIds","BinaryData","AddSchoolNoticeDetails","SendIcon","AddSchoolNoticeList","_ref","DeleteSchoolNotice","useNavigate","deleteSchoolNoticeDetailsMsg","sendNotice","SchoolNoticeList","toastId","resetDeleteSchoolNoticeMsg","getSchoolNoticeList","TabulerList","clickEdit","window","scrollTo","Delete","confirm","GetDeleteSchoolNoticeBody","DeleteSchoolNoticeDetails","NativeSelect","fullWidth","size","required","map","Item","i","Value","Name","ErrorDetail","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","textAlign","Submit","Submit1","isMobile","setIsMobile","addEventListener","handleResize","innerWidth","mb","style","display","alignItems","Hidden","mdDown","Tooltip","title","Text1","placement","px","overflow","whiteSpace","textOverflow","width","Text2","Text3","EditIcon","DeleteIcon","TabulerCard","HeadingStyle","theme","IconCardSize","Button","_ref2","RootWrapper","concat","useTheme","navigate","sessionStorage","getItem","undefined","open","setOpen","handleClick","prev","classes","flexDirection","justifyContent","ClickAwayListener","onClickAway","handleClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","arrow","componentsProps","tooltip","marginLeft","transform","InfoTwoToneIcon","className"],"sourceRoot":""}